// generates an html page which contains grid results and chart.

var conn = aqua.project.getServerConnection('NextGen Servers/MySQL/MySQL 6.0');
conn.connect();
conn.changeDatabase('demo');

// statement 1
aqua.response.write('select 1 as category, 25 as s1\n' + 
'union\n' + 
'select 2 as category, 45 as s1\n' + 
'union\n' + 
'select 3 as category, 80 as s1\n' + 
'union\n' + 
'select 4 as category, -20 as s1\n' + 
'union\n' + 
'select 5 as category, 65 as s1\n' + 
'union\n' + 
'select 6 as category, -35 as s1\n' + 
'union\n' + 
'select 7 as category, -10 as s1\n' + 
'union\n' + 
'select 8 as category, 50 as s1\n' + 
'union\n' + 
'select 9 as category, 45 as s1\n' + 
'union\n' + 
'select 10 as category, 80 as s1\n' + 
'union\n' + 
'select 11 as category, -10 as s1\n' + 
'union\n' + 
'select 12 as category, -45 as s1\n' + 
'union\n' + 
'select 13 as category, 55 as s1\n' + 
'union\n' + 
'select 14 as category, 65 as s1\n' + 
'union\n' + 
'select 15 as category, -40 as s1\n' + 
'union\n' + 
'select 16 as category, -25 as s1');
aqua.response.write('<p>');
dataSet = conn.executeSnapshot('select 1 as category, 25 as s1\n' + 
'union\n' + 
'select 2 as category, 45 as s1\n' + 
'union\n' + 
'select 3 as category, 80 as s1\n' + 
'union\n' + 
'select 4 as category, -20 as s1\n' + 
'union\n' + 
'select 5 as category, 65 as s1\n' + 
'union\n' + 
'select 6 as category, -35 as s1\n' + 
'union\n' + 
'select 7 as category, -10 as s1\n' + 
'union\n' + 
'select 8 as category, 50 as s1\n' + 
'union\n' + 
'select 9 as category, 45 as s1\n' + 
'union\n' + 
'select 10 as category, 80 as s1\n' + 
'union\n' + 
'select 11 as category, -10 as s1\n' + 
'union\n' + 
'select 12 as category, -45 as s1\n' + 
'union\n' + 
'select 13 as category, 55 as s1\n' + 
'union\n' + 
'select 14 as category, 65 as s1\n' + 
'union\n' + 
'select 15 as category, -40 as s1\n' + 
'union\n' + 
'select 16 as category, -25 as s1');


// chart
chart = aqua.chart.newChart();
chart.setDataSource(dataSet);
chart.setSeriesFields("s1");
chart.setCategoryFields("category");
chart.properties.setBackgroundColorBottom(-1314571);
chart.properties.setBackgroundColorTop(-2630411);
chart.properties.setCategoryAxisNumberFormat("#,##0");
chart.properties.setCategorySpacing(0.25);
chart.properties.setDepth(8.0);
chart.properties.setNumericCategoryAxis(false);
chart.properties.setFixedCategoryCount(1);
chart.properties.setShowFixedCategoryCount(false);
chart.properties.setFont('Arial-PLAIN-6');
chart.properties.setGroupSmallValuesThreshold(3.0);
chart.properties.setGroupSmallValues(true);
chart.properties.setHeight(10.0);
chart.properties.setImageWidth(640);
chart.properties.setImageHeight(480);
chart.properties.setShowLegend(true);
chart.properties.setLegendHeight(160);
chart.properties.setLegendHeightTypeFit();
chart.properties.setLegendPositionTopRight();
chart.properties.setLegendWidth(100);
chart.properties.setLegendWidthTypeExact();
chart.properties.setLightingBright();
chart.properties.setLineWidth(1.0);
chart.properties.setShowMarkers(true);
chart.properties.setMapShowBackground(false);
chart.properties.setMapShowDetails(false);
chart.properties.setMergeAxis(true);
chart.properties.setPanX(-4.8999987);
chart.properties.setPanY(-5.800001);
chart.properties.setPieShowLines(false);
chart.properties.setPieExplode(0.0);
chart.properties.setPieLabelDistance(3.0);
chart.properties.setReverseValueAxis(false);
chart.properties.setRotationX(324);
chart.properties.setRotationY(0);
chart.properties.setRotationZ(0);
chart.properties.setSeriesSpacing(0.25);
chart.properties.setStackedPercent(false);
chart.properties.setTitle('2D Negative Column Chart');
chart.properties.setValueAxisNumberFormat("###0");
chart.properties.setWidth(16.0);
chart.properties.setView2D(true);
chart.properties.setZoom(3);
chart.properties.setShowValueAxis(true);
chart.properties.setShowCategoryAxis(true);
chart.properties.setShowSeriesAxis(false);
chart.properties.setShowGrid(true);
chart.properties.setChartTypeColumn(0);
chart.properties.setColumnTypeCube(0);

url = chart.cache(3600);
aqua.response.write('<img src=').write(url).write('>');
aqua.response.write('<p>');

// grid results
writer = aqua.io.newHtmlWriter();
writer.setTableStyle('background:#ffffe1;');
writer.write(dataSet);
aqua.response.write(writer.toHtml());
aqua.response.write('<p>');
