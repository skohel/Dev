/*
Using best fit to predict future values of data.

Example
    see below
*/

var rawDataX=new Array();
var rawDataY = new Array();
var noise = new Array();
var fitY=new Array();
var guess = new Array();
var noise = new Array();
var coeff = new Array();


//generate noisy data
for(i=0;i<35;i++){
   rawDataX[i]=(i+1)/5.0;
noise[i]=2*Math.random()-1;
   rawDataY[i]=2*Math.pow(rawDataX[i],1.5) + 3 +noise[i]/2;
   
}

//perform fit and store power function with parameters
var fun;
fun= aqua.math.fit.newPOW_Function();

fitY=aqua.math.fit.powerFit(rawDataX,rawDataY);
coeff=aqua.math.fit.powerFitCoeff(rawDataX,rawDataY);

var chart = aqua.chart.newChart();
var model = chart.getModel();

model.addSeries("raw");
model.addSeries("predicted via fit");

//populate series
for(i=0;i<30;i++){
model.addCategory(rawDataX[i]);
model.setValue(0,i,rawDataY[i]);
model.setValue(1,i,fitY[i]);
}

//extrapolate future values
for(i=30;i<35;i++){
model.setValue(1,i,aqua.math.fit.evaluate((i+1.0)/5,fun,coeff));
}

chart.getProperties().setTitle("Prediction (missing values shown as zeroes)");
chart.getProperties().setChartTypeLine(0);
chart.getProperties().setChartTypeLine(1);
chart.getProperties().setMergeAxis(true);
chart.getProperties().setView2D(true);

chart.getProperties().setWidth(20);
chart.getProperties().setHeight(12);


//chart.getProperties().setMergeSeriesMin(0);
//chart.getProperties().setMergeSeriesMax(100);
//chart.getProperties().setCategoryRange(9,100);


chart.getProperties().setImageHeight(480);
chart.getProperties().setImageWidth(800);


// image will be available for 5 seconds
var url = chart.cache(5);
aqua.response.write('<img src=').write(url).write('>');
aqua.response.write('<p style="font-size:200%">');

aqua.response.write('Raw Data = 2 x<sup>1.5</sup> + 3 + noise <br>');
aqua.response.write('Fit = ').write(coeff[0]).write(' x<sup>').write(coeff[1]).write('</sup> + ' ).write(coeff[2]);
aqua.response.write('<br>Fit used to predict future values of dataset.')
