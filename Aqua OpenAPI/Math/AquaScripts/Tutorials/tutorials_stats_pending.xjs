/*
aqua.math.curve

Synopsyis
    Summary of interpolation and evaluation methods

Description
Demonstrates usage of prediction methods

Example
    see below

*/
var rawDataX=new Array();
var rawDataXS = new Array();
var rawDataY=new Array();
var rawDataYClean = new Array();

var interpolatedPoint=0;
var noise = new Array();
var noise2 = new Array();
var desiredX=-5;
var N = 1000;

//generate noise
for(i=0;i<N;i++){
noise[i]=Math.random();
noise2[i]=Math.random();

rawDataX[i]=Math.sqrt(-2*Math.log(noise[i]))*Math.sin(2*Math.PI*noise2[i]);;
}

var chart = aqua.chart.newChart();
var model = chart.getModel();
var ideal = new Array();
var fsum=0;
binnedData=aqua.math.stat.bins(rawDataX,100);
binFrequency=aqua.math.stat.frequency(binnedData);

for(i=0;i<binFrequency[1].length;i++){
ideal[i]=Math.exp(-Math.pow(binFrequency[0][i],2)/2) ;
ideal[i]=ideal[i]/Math.sqrt(2*Math.PI);
fsum+=(binFrequency[1][i]);
}
var datamax=binFrequency[0][20]-binFrequency[0][19];//aqua.math.stat.max(binFrequency[1]);
fsum=fsum*datamax;

aqua.console.println(aqua.math.stat.mean(rawDataX) + "  " + aqua.math.stat.std(rawDataX) + "  " + fsum);
model.addSeries("raw");
//model.addSeries("raw with noise");

for(i=0;i<rawDataX.length;i++){
model.addCategory(i);
model.setValue(0,i,rawDataX[i]);
//model.setValue(0,i,rawDataYClean[i]);

}



//chart.getProperties().setNumericCategoryAxis(true);

chart.getProperties().setTitle(" raw data.");
chart.getProperties().setChartTypeScatter(0);
//chart.getProperties().setChartTypeLine(1);
//chart.getProperties().setLineWidth(2);
chart.getProperties().setMergeAxis(true);


//chart.getProperties().setView2D(true);

chart.getProperties().setWidth(20);
chart.getProperties().setHeight(12);


//chart.getProperties().setMergeSeriesMin(0);
//chart.getProperties().setMergeSeriesMax(200);
//chart.getProperties().setCategoryRange(9,100);


chart.getProperties().setImageHeight(480);
chart.getProperties().setImageWidth(800);


//get fit to resample

var chart2 = aqua.chart.newChart();
var model2 = chart2.getModel();

//var testFit = aqua.math.getFit();
//var fitY = new Array();
//var rawResampleY = new Array();
//
////polynomial fit
//var fitYGraphPoly = new Array();
//var polyCoeff = new Array();
//var newPoly = testFit.newPOLY_Function();
//
//fitPolyY=testFit.polyFit(rawDataX,rawDataY,2);
//polyCoeff=testFit.polyFitCoeff(rawDataX,rawDataY,2);



////resample
//for(i=0;i<30;i++){
//fitPolyY[i]=testFit.evaluate(i,newPoly,polyCoeff);  //resample via fit and evaluate
//rawResampleY[i]=aqua.math.curve.interpolate(rawDataX,rawDataY,i,"loess");
//
//}


model2.addSeries("Bin Data");
model2.addSeries("Normal");



//predict future data using fit and evaluate
for(i=0;i<binFrequency[0].length;i++){
model2.addCategory(binFrequency[0][i]);
model2.setValue(0,i,binFrequency[1][i]/fsum);
model2.setValue(1,i,ideal[i]);
//
}
//
chart2.getProperties().setTitle("Uniform Resampling");
chart2.getProperties().setChartTypeColumn(0);
chart2.getProperties().setLineWidth(1);
chart2.getProperties().setChartTypeLine(1);

chart2.getProperties().setMergeAxis(true);

chart2.getProperties().setRotationX(-45);
chart2.getProperties().setDepth(10);
chart2.getProperties().setWidth(20);
chart2.getProperties().setHeight(12);
chart2.getProperties().setView2D(true);

chart2.getProperties().setNumericCategoryAxis(true);

//chart2.getProperties().setMergeSeriesMin(-10);
//chart2.getProperties().setMergeSeriesMax(200);
//chart2.getProperties().setCategoryRange(0,32);


chart2.getProperties().setImageHeight(480);
chart2.getProperties().setImageWidth(800);

// image will be available for 5 seconds
var url = chart.cache(5);
var url2 = chart2.cache(5);
//aqua.response.write('<img src=').write(url).write('>');
//aqua.response.write('<p style="font-size:200%">');

//aqua.response.write('Missing data in raw set filled via interpolation.<br>');

//introduction

aqua.response.write(' <p><span style="color: #2778cb;"><big><strong>Non-uniform Data:  Aqua resampling methods.</strong></big></span></p>');
aqua.response.write('The way a data set is sampled can often be a problem.  Sometimes the data is non-uniform or simply too dense to analyze conveniently.  These issues can be mediated by resampling.  ');

aqua.response.write('The following data set is noisy and non-uniformly sampled.  The x intervals vary in size between 0 and 2.  The non-noisy version is included to highlight the changing intervals.<br>');
//fig 1
aqua.response.write('<img src=').write(url).write('>');

//notes on fig 1

aqua.response.write('<hr> Aqua.math.curve and Aqua.math.fit have two methods to address this issue.  We can find a best fit function and evaluate at uniform intervals');

aqua.response.write('<table>');
aqua.response.write('<pre>         fitY=testFit.polyFit(rawDataX,rawDataY,2);  //best fit polynomial of order 2</pre>');
aqua.response.write('<pre>         polyCoeff=testFit.polyFitCoeff(rawDataX,rawDataY,2);  //recover polynomial coefficients for evaluation</pre>');
aqua.response.write('<pre>         evaluatedPoint = testFit.evaluate(desiredX,newPoly,polyCoeff);  //evaluate fit at desiredX</pre>');
 aqua.response.write('or simply interpolate uniformly throughout the data set. ') ; 
aqua.response.write('<pre>         interpolatedPoint=aqua.math.curve.interpolate(rawDataX,rawDataY,desiredX);  // calculate missing data point at x = desiredX</pre> ');



//fig 2
aqua.response.write('<img src=').write(url2).write('>');
aqua.response.write('<hr> The same code can be used to down-sample, or decimate a large data set.');


