// all test data will be created under this directory
var test_data_dir = "c:/tmp/test/AQFileSystem/";

// get instance of filesystem object
var AQFS = aqua.filesystem;

test_copyFileSetsToDir();

//--- copy files specified in a fileset to a directory ---
function test_copyFileSetsToDir() {
    
    var src_base = test_data_dir + "files/src_base/";
    var dest_base = test_data_dir + "copy/copy_dest/fileset/";
    var fileset1 = AQFS.newFileSet();
    var fileset2 = AQFS.newFileSet();
    
    fileset1.setBaseDir(test_data_dir + "files/src_base1/")
    fileset1.setIncludes("**/*");
    fileset1.setExcludes("**/*.html");
    
    fileset2.setBaseDir(test_data_dir + "files/src_base2/")
    fileset2.setIncludes("**/*");
    fileset2.setExcludes("**/*.txt");
    
    var filesets = new Array(fileset1, fileset2);
    
    // testing error condition - source file is required
    exec_copyFileSetsToDir(null, "ab");
    // testing error condition - destination is requred
    exec_copyFileSetsToDir("ab", null);
    // this should work
    exec_copyFileSetsToDir(filesets, dest_base);
    
    
}

function exec_copyFileSetsToDir(filesets, destDir) {
    try {
        aqua.console.println("copyFileSetsToDir: copying " );
        for (var i=0; i<filesets.length; i++){
           aqua.console.println("["+ (filesets[i] == null? 'null' : filesets[i].getBaseDir()) + "]");
        }
        aqua.console.println(" to [" + destDir + "]...");
        AQFS.copyFileSets(filesets, destDir);
        aqua.console.println("copyFileSetsToDir done.");
    } 
    catch(ex) {
        aqua.console.println("copyFileSetsToDir failed - " + ex.toString());
    }
}
