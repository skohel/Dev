//------------------------------------------------------------------------------
// Class:  
//      CoreHadoopFileSystem
// Method:
//      copyFromLocalFile()
//
// Synopsis:
//      copyFromLocalFile()
//
// Description
//      Copies a single file to a directory. if the destination directory does
//      not exist, it will be created.
//    
// Parameters
//      string - The file to be copied; required.
//      string - The location of where the file will be copied; required. 
//
// Throws
//      Exception - on error
//
// Return
//      None.
//
// Example
//      See below.
//------------------------------------------------------------------------------
// all test data will be created under this FS directory
var fs_data_dir = "/test/AQHadoopFileSystem/";
var local_data_dir = "C:/Temp/files";

// get instance of filesystem object
var AQLOCALFS = aqua.filesystem;

//var url = "hdfs://localhost:54310";
var url = "ftp://10.168.2.138";
var AQFS = aqua.net.newFtpFileSystem(url, "anonymous", "user");

test_copyFromLocalFile();

//--- copy files specified in a fileset to a directory ---
function test_copyFromLocalFile() {
    var localfile = "C:/Temp/edit.htm"
//    AQLOCALFS.copy("C:/Temp/edit.htm", local_data_dir);

    var dest_base = fs_data_dir;
//    AQFS.deleteDirectory(dest_base, true);   
    
    // testing error condition - source file is required
    exec_copyFromLocalFile(null, "ab");
    // testing error condition - destination is requred
    exec_copyFromLocalFile("ab", null);
    // this should work
    exec_copyFromLocalFile(localfile, dest_base + "license.txt");

    // Clean up
//    AQFS.deleteDirectory(dest_base, true);
}

function exec_copyFromLocalFile(srcFile, destFile) {
    try {
        aqua.console.println("copyFromLocalFile (file) : copying [" + srcFile + "] to [" + destFile + "]...");
        aqua.console.println(" to [" + destFile + "]...");
        AQFS.copyFromLocalFile(srcFile, destFile);
        aqua.console.println("copyFromLocalFile done.");
    } catch(ex) {
        aqua.console.println("copyFromLocalFile failed - " + ex.toString());
    }
}
