
var testHost = "10.168.5.211";
var testUser = "aquatest";
var testPassword = aqua.console.readPassword("Please enter remote server password for user '" + testUser + "': ");

var testLocalRootDir = "c:/tmp/aqnet_test/";
var testRemoteUserHome = "/home/" + testUser + "/";
var testRemoteRootDir = testRemoteUserHome + "aqnet_test/";

var testScpLocalSrcDir = testLocalRootDir + "scp_src/";
var testScpLocalDestDir = testLocalRootDir + "scp_dest/";
var testScpRemoteSrcDir = testRemoteRootDir + "scp_src/";
var testScpRemoteDestDir = testRemoteRootDir + "scp_dest/";

// local SSH files
var cygwinSSHdir = "c:/cygwin/home/fyang/.ssh/";
var cygwinKeyfile = cygwinSSHdir + "id_rsa";
var cygwinKnownhosts = cygwinSSHdir + "known_hosts";
var cygwinPassphrase = "aquatest account";

// an utility function to write a message to the console
function show_message(message) {
    aqua.console.println(message);
}

// an utility function to report error
function show_error(command, exception) {
    show_message(command + " failed !!! - " + exception.name + " : " + exception.message);
}

// an utility function to execute open API
function exec_scp_to(parameters) {
    try {
        var file = parameters.file || null;
        var fileset = parameters.fileset || null;
        var todir = parameters.todir || null;
        var host = parameters.host || null;
        var username = parameters.username || null;
        var password = parameters.password || null;
        var keyfile = parameters.keyfile || null;
        var passphrase = parameters.passphrase || null;
        var trust = parameters.trust ? true : null;
        var knownhosts = parameters.knownhosts || null;
        aqua.net.scpTo(file, fileset, todir, host, username, password, keyfile, passphrase, trust, knownhosts);
        show_message("scpTo(): done.");
    } catch(ex) {
        show_error("scpTo()", ex);
    }
}

// test invalid settings
show_message("==> test invalid settings...");

var parameters = { };
exec_scp_to(parameters);

var fileName = "tmp_file.txt";
parameters.file = testScpLocalSrcDir + fileName;
exec_scp_to(parameters);

parameters.todir = testScpRemoteDestDir;
exec_scp_to(parameters);

parameters.host = testHost;
exec_scp_to(parameters);

parameters.username = testUser;
exec_scp_to(parameters);

// all of required parameters should have been set now, including password below

show_message("==> copy a single file form local to remote (auth=password)...");
parameters.password = testPassword;
exec_scp_to(parameters);

show_message("==> copy a directory from local to remote (auth=keyfile)...");
delete parameters.file;
delete parameters.password;
parameters.keyfile = cygwinKeyfile;
parameters.passphrase = cygwinPassphrase;
var fileset = aqua.filesystem.newFileSet();
fileset.setBaseDir(testScpLocalSrcDir + "tmp_dir");
parameters.fileset = fileset;
exec_scp_to(parameters);

show_message("==> copy file set from local to remote (custom know_hosts)...");
delete parameters.file;
parameters.knownhosts = cygwinKnownhosts;
fileset = aqua.filesystem.newFileSet();
fileset.setBaseDir(testScpLocalSrcDir);
fileset.setIncludes("**/*_1.txt");
fileset.setIncludes("**/*_3.txt");
parameters.fileset = fileset;
parameters.todir = testScpRemoteDestDir + "fileset";
exec_scp_to(parameters);

show_message("DONE")
